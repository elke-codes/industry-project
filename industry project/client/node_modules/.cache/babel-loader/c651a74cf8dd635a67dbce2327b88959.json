{"ast":null,"code":"var _jsxFileName = \"/home/elke/code/brainstation/PROJECTS/industry-project/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport LandingPage from \"./pages/LandingPage\";\nimport GameScreen from \"./components/GameScreen/GameScreen\";\nimport Loaderboard from \"./pages/Loaderboard/Loaderboard\";\nimport Lobby from \"./components/Lobby/Lobby\";\nimport Chat from \"./components/Chat/client/Chat\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  _s();\n\n  const [userName, setUserName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [showChat, setShowChat] = useState(false); //establish a connection between a user that just entered the page and the room they want to enter\n\n  const joinRoom = () => {\n    //set userName and room to be what's typed in the input fields\n    //\n    //check if fields aren't empty\n    if (userName !== \"\" && room !== \"\") {\n      //emit event from frontend\n      //see index.js socket.on(\"join_room\")\n      // where room is the data we 're passing back to server\n      socket.emit(\"join_room\", room);\n      setShowChat(true); //https://www.youtube.com/watch?v=NU-HfZY3ATQ\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: LandingPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/Loaderboard\",\n          component: Loaderboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/gamescreen\",\n          component: GameScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/lobby\",\n          component: Lobby\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"GbvF8VyADpoIPm1Dj7k7vpAZUDc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/elke/code/brainstation/PROJECTS/industry-project/client/src/App.js"],"names":["BrowserRouter","Switch","Route","LandingPage","GameScreen","Loaderboard","Lobby","Chat","io","useState","socket","connect","App","userName","setUserName","room","setRoom","showChat","setShowChat","joinRoom","emit"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,uBAAX,CAAf;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC,CAHc,CAKd;;AACA,QAAMU,QAAQ,GAAG,MAAM;AACtB;AACA;AACA;AACA,QAAIN,QAAQ,KAAK,EAAb,IAAmBE,IAAI,KAAK,EAAhC,EAAoC;AACnC;AACA;AACA;AACAL,MAAAA,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyBL,IAAzB;AACAG,MAAAA,WAAW,CAAC,IAAD,CAAX,CALmC,CAMnC;AACA;AACD,GAZD;;AAaA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BAEC,QAAC,aAAD;AAAA,6BACC,QAAC,MAAD;AAAA,gCACC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,SAAS,EAAEf;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,SAAS,EAAEE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,aAAZ;AAA0B,UAAA,SAAS,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,SAAS,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAJD,eAKC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBALD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;GAjCQM,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport LandingPage from \"./pages/LandingPage\";\nimport GameScreen from \"./components/GameScreen/GameScreen\";\nimport Loaderboard from \"./pages/Loaderboard/Loaderboard\";\nimport Lobby from \"./components/Lobby/Lobby\";\nimport Chat from \"./components/Chat/client/Chat\";\nimport io from \"socket.io-client\";\nimport { useState } from \"react\";\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n\tconst [userName, setUserName] = useState(\"\");\n\tconst [room, setRoom] = useState(\"\");\n\tconst [showChat, setShowChat] = useState(false);\n\n\t//establish a connection between a user that just entered the page and the room they want to enter\n\tconst joinRoom = () => {\n\t\t//set userName and room to be what's typed in the input fields\n\t\t//\n\t\t//check if fields aren't empty\n\t\tif (userName !== \"\" && room !== \"\") {\n\t\t\t//emit event from frontend\n\t\t\t//see index.js socket.on(\"join_room\")\n\t\t\t// where room is the data we 're passing back to server\n\t\t\tsocket.emit(\"join_room\", room);\n\t\t\tsetShowChat(true);\n\t\t\t//https://www.youtube.com/watch?v=NU-HfZY3ATQ\n\t\t}\n\t};\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{/* <GameScreen /> */}\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={LandingPage} />\n\t\t\t\t\t<Route path=\"/Loaderboard\" component={Loaderboard} />\n\t\t\t\t\t<Route path=\"/gamescreen\" component={GameScreen} />\n\t\t\t\t\t<Route path=\"/lobby\" component={Lobby} />\n\t\t\t\t\t<Chat />\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}